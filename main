#!/usr/bin/env node

import process from 'node:process';
import { exec } from 'node:child_process';
import { emitKeypressEvents } from 'readline';

const CELEBRATIONS = [
  'COWABUNGA!',
  'TURTLE POWER!',
  'PIZZA TIME!',
  'BOOYAKASHA!',
];

let state = {
  x: 10,
  y: 10,
  targetX: 9,
  targetY: 9,
  celebration: null,
  screen: 'start',
  soldiers: 20,
  status: 'active',
  time: 10000,
  timer: null,
  interval: null,
}

const startScreen = `==================================
---------- TURTLE POWER ----------
==================================

⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣤⣤⣤⣄⡀⠀⠀⠀⠀⢠⣤⣄⠀⣀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣠⣴⠟⠛⠉⠁⠀⠀⠈⠉⠛⠻⣦⣄⠀⢸⡟⠙⣿⡟⣷⡀
⠀⠀⠀⠀⠀⢠⣾⠏⠁⣀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡈⠻⣷⣼⣧⠀⢹⡇⣹⡇
⠀⠀⠀⠀⣰⡿⠟⠛⢛⣛⣛⡿⢶⣶⣶⡶⢿⣛⣛⡛⠛⠿⢿⣿⣷⣿⣣⡿⠁
⠀⠀⠀⠀⣿⠁⢀⣼⠟⣯⣝⣻⣦⣤⣤⣾⣟⣫⣭⠻⣷⡄⠈⣿⣨⣿⠋⠀⠀
⠀⠀⣠⡾⠻⢷⣬⣛⣿⡿⠟⠋⠁⠀⠀⠈⠉⠛⢿⣿⣋⣵⡾⠛⢿⣅⠀⠀⠀
⠀⣼⠟⠀⠀⠀⠉⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⠁⠀⠀⠀⠻⣧⠀⠀
⠰⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠆⠀
⠀⢻⣦⠀⠀⠀⠀⠀⢴⣤⣤⣀⣀⠀⠀⣀⣠⣤⡾⢿⡆⠀⠀⠀⠀⣴⡟⠀⠀
⠀⠀⠙⢷⣤⣀⠀⠀⠀⠈⠉⠙⠛⠛⠛⠛⠉⠁⠀⠈⠁⠀⣀⣤⡾⠋⠀⠀⠀
⠀⠀⠀⠀⠈⠛⠷⢶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡶⠟⠋⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠛⢷⣤⣀⡀⠀⠀⢀⣠⣴⡾⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠛⠛⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

1. Press "s" to start the game. 
2. You'll have ${state.time/1000} seconds to wipe out 20 foot soldiers.
`;

process.stdin.on('keypress', function(_, key) {
  if (key.name === 'q') {
    gameOver();
  }

  if (key.name === 's' && state.screen === 'start') {
    startGame();
  }

  if (key.name === 'left') {
    state.x--;
  }

  if (key.name === 'right') {
    state.x++;
  }

  if (key.name === 'up') {
    state.y--;
  }

  if (key.name === 'down') {
    state.y++;
  }

  update();
})

init();

function init() {
  console.clear();

  setupTerminal();

  if (state.screen === 'start') {
    console.log(startScreen);
  } else {
    render();
  }
}

function startGame() {
  state.screen = 'game';

  state.timer = setInterval(() => {
    state.time = state.time - 1_000;

    if (state.time >= 0) {
      moveTarget();
    }
  }, 1_000);
}

function clearTimer() {
  clearInterval(state.timer);

  state.timer = null;
}

function drawHeader() {
  process.stdout.cursorTo(0, 0);
  
  const celebration = state.celebration ? ` | MESSAGE: ${state.celebration}` : '';
  const message = `FOOT SOLIDERS: 20 | TIME REMAINING: ${state.time/1000} SECONDS${celebration}`;

  process.stdout.write(message);
}

function moveTarget() {
  if (Math.random() < 0.5) {
    state.targetX--;
  } else {
    state.targetX++;
  }

  if (Math.random() < 0.5) {
    state.targetY--;
  } else {
    state.targetY++;
  }

  update();
}

function say(message) {
  exec(`say --voice="Alex" --rate="175" ${message}`);
}

function update() {
  if (state.time === 0) {
    state.status = 'fail';

    gameOver('end');
  } else if (state.x === state.targetX && state.y === state.targetY) {
    state.status = 'win';

    gameOver('end');
  } else {
    render();
  }
}

function render() {
  console.clear();

  drawHeader();

  process.stdout.cursorTo(state.x, state.y);
  process.stdout.write('🐢');

  process.stdout.cursorTo(state.targetX, state.targetY);
  process.stdout.write('🥷');
}

function setupTerminal() {
  // set up terminal for reading key presses
  emitKeypressEvents(process.stdin);
  process.stdin.setRawMode(true);

  // use terminal alternate screen
  process.stdout.write("\x1b[?1049h");

  // hide cursor
  process.stdout.write("\x1b[?25l");
}

function gameOver(type) {
  switch (type) {
    case 'end':
      const messageIdx = Math.floor(Math.random() * CELEBRATIONS.length);
      const celebration = CELEBRATIONS[messageIdx];

      state.celebration = celebration;

      say(celebration);
      render();
      clearTimer();

      break;
    default:
      process.stdout.write("\x1b[?1049l");
      process.stdout.write("\x1b[?25h");
      process.exit();
  }
}
