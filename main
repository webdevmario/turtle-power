#!/usr/bin/env node

import process from 'node:process';
import { exec } from 'node:child_process';
import { emitKeypressEvents } from 'readline';

const CELEBRATIONS = [
  'Cowabunga!',
  'Turtle Power!',
  'Pizza time!',
];

let state = {
  x: 10,
  y: 10,
  targetX: 9,
  targetY: 9,
  time: 10000,
  timer: setInterval(() => {
    state.time = state.time - 1_000;

    if (state.time === 0) {
      gameOver();
    }
  }, 1_000),
  interval: setInterval(() => {
    moveTarget();
  }, 1_000)
}

process.stdin.on('keypress', function(_, key) {
  if (key.name === 'q') {
    gameOver();
  }

  if (key.name === 'left') {
    state.x--;
  }

  if (key.name === 'right') {
    state.x++;
  }

  if (key.name === 'up') {
    state.y--;
  }

  if (key.name === 'down') {
    state.y++;
  }

  update();
})

init();

function init() {
  console.clear();

  setupTerminal();
  render();
}

function drawHeader() {
  process.stdout.cursorTo(0, 0);
  
  const message = `FOOT SOLIDERS: 20 | TIME REMAINING: ${state.time/1000} SECONDS`;

  process.stdout.write(message);
}

function moveTarget() {
  if (Math.random() < 0.5) {
    state.targetX--;
  } else {
    state.targetX++;
  }

  if (Math.random() < 0.5) {
    state.targetY--;
  } else {
    state.targetY++;
  }

  update();
}

function say(message) {
  exec(`say --voice="Alex" --rate="175" ${message}`);
}

function update() {
  if (state.x === state.targetX && state.y === state.targetY) {
    gameOver();
  }

  render();
}

function render() {
  console.clear();

  drawHeader();

  process.stdout.cursorTo(state.x, state.y);
  process.stdout.write('X');

  process.stdout.cursorTo(state.targetX, state.targetY);
  process.stdout.write('0');
}

function setupTerminal() {
  // set up terminal for reading key presses
  emitKeypressEvents(process.stdin);
  process.stdin.setRawMode(true);

  // use terminal alternate screen
  process.stdout.write("\x1b[?1049h");

  // hide cursor
  process.stdout.write("\x1b[?25l");
}

function gameOver() {
  // switch back to regular terminal screen
  process.stdout.write("\x1b[?1049l");

  // restore the cursor
  process.stdout.write("\x1b[?25h");

  const messageIndex = Math.floor(Math.random() * CELEBRATIONS.length); 

  say(CELEBRATIONS[messageIndex]);

  process.exit();
}
